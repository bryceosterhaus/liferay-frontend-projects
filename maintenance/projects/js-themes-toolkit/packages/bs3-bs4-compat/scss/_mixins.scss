// Lexicon UX 1.x Alert

@mixin color-alert-text($color, $bold-color) {
	color: $color;

	.alert-link,
	.close,
	.lead {
		color: $bold-color;
	}
}

// Lexicon UX 1.x Aspect Ratio

@mixin aspect-ratio($width: 1, $height: 1) {
	padding-bottom: percentage($height / $width);
}

// Lexicon UX 1.x Button

@mixin color-btn($border) {
	border-color: $border;
}

@mixin color-btn-hover($bg, $border) {
	&:focus,
	&:hover {
		background-color: $bg;
		border-color: $border;
	}
}

@mixin color-btn-active($bg, $border) {
	&:active,
	&.active,
	&:active:focus,
	&:active:hover,
	&.active:focus,
	&.active:hover,
	.open > &.dropdown-toggle,
	.open > &.dropdown-toggle:focus,
	.open > &.dropdown-toggle:hover {
		background-color: $bg;
		border-color: $border;
	}
}

// Lexicon UX 1.x Dropdowns

@mixin color-dropdown-toggle-link($color: $link-color, $focus-color: $link-hover-color, $hover-color: $link-hover-color) {
	.dropdown-toggle {
		color: $color;

		&:focus {
			color: $focus-color;
		}

		&:hover {
			color: $hover-color;
		}
	}
}

@mixin color-dropdown-menu-links($color: $dropdown-link-color, $focus-color: $dropdown-link-active-color, $hover-color: $dropdown-link-hover-color) {
	.dropdown-menu {
		a {
			color: $color;

			&:focus {
				color: $focus-color;
			}

			&:hover {
				color: $hover-color;
			}
		}
	}
}

// Lexicon UX 1.x Figures

@mixin color-figcaption ($bgColor: #000, $alpha: 0.7, $color: #fff) {
	background-color: $bgColor;
	background-color: rgba($bgColor, $alpha);
	color: $color;
}

@mixin style-figcaption($bgColor: #000, $alpha: 0.7, $color: #fff) {
	@warn "Lexicon's `style-figcaption($bgColor: $figcaption-bg, $alpha: $figcaption-bg-alpha, $color: $figcaption-color)` mixin is deprecated as of v1.0.10 and will be removed in v2.0.0.";

	@include color-figcaption($bgColor, $alpha, $color);

	font-weight: 300;
	padding: 10px 15px;
	position: absolute;
	width: 100%;
}

// Lexicon UX 1.x Forms

@mixin color-placeholder($element, $color: null) {
	@warn "Lexicon's `color-placeholder($element, $color: $input-color-placeholder)` mixin is deprecated as of v1.0.9 and will be removed in v2.0.0. Please use `placeholder($color: $input-color-placeholder)` instead.";

	#{$element}::-webkit-input-placeholder {
		color: $color;
	}

	#{$element}:-moz-placeholder {
		color: $color;
	}

	#{$element}::-moz-placeholder {
		color: $color;
	}

	#{$element}:-ms-input-placeholder {
		color: $color;
	}
}

@mixin select-box-icon($color) {
	@warn "Lexicon's `select-box-icon($color)` mixin is deprecated as of v1.0.10 and will be removed in v2.0.0. Please use `background-image: lx-icon($name, $color)` instead.";

	background-image: clay-icon(caret-double-l, $color);
}

// Lexicon UX 1.x List Group

@mixin color-tabular-list-group-item($color, $active-bg: $list-group-active-bg) {
	background-color: transparent;
	border-left: 5px solid $color;

	&,
	&:focus,
	&:hover {
		color: $color;
	}

	&.active {
		background-color: $active-bg;
	}

	.status {
		color: $color;
	}
}

// Lexicon UX 1.x Loaders

@function to-list($value, $num: 5) {
	$newList: ($value);

	@for $i from 1 to $num {
		$newList: append($newList, $value, 'comma');
	}

	@return $newList;
}

@mixin trailing-shadow($xOffset, $yOffset, $color: #93ccf5, $size: (-0.4em, -0.42em, -0.44em, -0.46em, -0.477em)) {
	@if type-of($xOffset) != 'list' {
		$xOffset: to-list($xOffset);
	}

	@if type-of($yOffset) != 'list' {
		$yOffset: to-list($yOffset);
	}

	@if type-of($color) != 'list' {
		$color: to-list($color);
	}

	@if type-of($size) != 'list' {
		$size: to-list($size);
	}

	$len: length($color);

	@for $i from $len * -1 through -2 {
		$color: set-nth($color, $i, adjust-hue(nth($color, $i), (abs($i) - 1) * 5));
	}

	$box-shadow: nth($xOffset, 1) nth($yOffset, 1) 0 nth($size, 1) nth($color, 1),
	nth($xOffset, 2) nth($yOffset, 2) 0 nth($size, 2) nth($color, 2),
	nth($xOffset, 3) nth($yOffset, 3) 0 nth($size, 3) nth($color, 3),
	nth($xOffset, 4) nth($yOffset, 4) 0 nth($size, 4) nth($color, 4),
	nth($xOffset, 5) nth($yOffset, 5) 0 nth($size, 5) nth($color, 5);

	box-shadow: $box-shadow;
}

// Lexicon UX 1.x Monospace

@mixin monospace($size) {
	height: $size;
	line-height: $size;
	width: $size;
}

// Lexicon UX 1.x Nameplates

@mixin color-nameplate-label($bg, $color: $body-color) {
	background-color: $bg;
	color: $color;
}

@mixin nameplate-label-autofit($media-feature) {
	@media ($media-feature) {
		&,
		.nameplate-label {
			margin-right: 0;
		}

		.nameplate-field {
			width: 1%;
		}

		.nameplate-label-text {
			left: 5px;
			max-width: none;
			position: absolute;
			right: 5px;
			text-align: left;
			top: auto;

			-ms-transform: translateY(-50%);
			transform: translateY(-50%);
		}

		.nameplate-label-more .nameplate-label-text {
			text-align: center;
		}
	}
}

// Lexicon UX 1.x Nav Nested

@mixin make-nav-nested($indent: 15px, $nest-level: 15, $nav-class: ".nav", $i: 1) {
	@for $i from (1) through $nest-level {
		#{$nav-class} > li {
			> a {
				padding-left: $indent * ($i + 1);
			}

			> .nav-equal-height-heading {
				padding-left: $indent * $i;
			}
		}

		$nav-class: "#{$nav-class} .nav";
	}
}

// Lexicon UX 1.x Simple Flexbox Grid

@mixin break-flex-item() {
	flex-basis: auto;
	width: 100%;
}

@mixin stack-flex-container() {
	flex-direction: column;

	.flex-item-full {
		flex-basis: auto;
	}
}

// Lexicon UX 1.x Timelines

@mixin timeline-item-reverse() {
	@include clay-timeline-item-reverse();
}

@mixin timeline-spacing($outer-spacing, $inner-spacing, $item-vertical-padding: 10px) {
	@include clay-timeline-spacing($outer-spacing, $inner-spacing, $item-vertical-padding);
}

// Lexicon UX 1.x Toggle Switch

@function set-data-label-text-position($toggle-switch-width, $toggle-switch-padding) {
	@return clay-data-label-text-position($toggle-switch-width, $toggle-switch-padding);
}

@mixin color-toggle-switch-bar($off-bg, $off-border: $off-bg, $on-bg: $off-bg, $on-border: $off-border) {
	@warn "Lexicon's `color-toggle-switch-bar($off-bg, $off-border: $off-bg, $on-bg: $off-bg, $on-border: $off-border)` mixin is deprecated as of v1.0.11 and will be removed in v2.0.0.";

	&:empty ~ .toggle-switch-bar {
		&:before {
			background-color: $off-bg;
			border: $toggle-switch-bar-border-width solid $off-border;
		}
	}

	&:checked ~ .toggle-switch-bar {
		&:before {
			background-color: $on-bg;
			border: $toggle-switch-bar-border-width solid $on-border;
		}
	}
}

@mixin color-toggle-switch-button($button-off-bg, $button-off-border: $button-off-bg, $button-on-bg: $button-off-bg, $button-on-border: $button-off-border) {
	@warn "Lexicon's `color-toggle-switch-button($button-off-bg, $button-off-border: $button-off-bg, $button-on-bg: $button-off-bg, $button-on-border: $button-off-border)` mixin is deprecated as of v1.0.11 and will be removed in v2.0.0.";

	&:empty ~ .toggle-switch-bar {
		&:after {
			background-color: $button-off-bg;
			border: $toggle-switch-button-border-width solid $button-off-border;
		}
	}

	&:checked ~ .toggle-switch-bar {
		&:after {
			background-color: $button-on-bg;
			border: $toggle-switch-button-border-width solid $button-on-border;
		}
	}
}

@mixin color-toggle-switch-bar-icon($off-color, $on-color: $off-color) {
	@warn "Lexicon's `color-toggle-switch-bar-icon($off-color, $on-color: $off-color)` mixin is deprecated as of v1.0.11 and will be removed in v2.0.0.";

	&:empty ~ .toggle-switch-bar .toggle-switch-icon {
		color: $off-color;
	}

	&:checked ~ .toggle-switch-bar .toggle-switch-icon {
		color: $on-color;
	}
}

@mixin color-toggle-switch-button-icon($off-color, $on-color: $off-color) {
	@warn "Lexicon's `color-toggle-switch-button-icon($off-color, $on-color: $off-color)` mixin is deprecated as of v1.0.11 and will be removed in v2.0.0.";

	&:empty ~ .toggle-switch-bar .toggle-switch-icon.button-icon {
		color: $off-color;
	}

	&:checked ~ .toggle-switch-bar .toggle-switch-icon.button-icon {
		color: $on-color;
	}
}

// Lexicon UX 1.x Type

@mixin color-blockquote ($color) {
	border-color: $color;

	footer, small, .small {
		color: $color;
	}
}

@mixin color-link($color, $hover-color) {
	color: $color;

	&:focus,
	&:hover {
		color: $hover-color;
	}
}

@mixin highlight-text($bg-color, $color) {
	@include clay-highlight-text($bg-color, $color);
}

// Lexicon UX 1.x User Icons

@mixin color-user-icon($bg-color: #999, $color: #FFF) {
	background-color: $bg-color;
	color: $color;
}

@mixin size-user-icon($size: 32px) {
	@warn "Lexicon's `size-user-icon($size)` mixin is deprecated as of v1.0.6 and will be removed in v2.0.0. Please use `monospace($size)` instead.";

	@include monospace($size);
}

// BS3 Button Size mixin

@mixin button-size(
	$padding-vertical,
	$padding-horizontal,
	$font-size,
	$line-height,
	$border-radius
) {
	border-radius: $border-radius;
	font-size: $font-size;
	line-height: $line-height;
	padding: $padding-vertical $padding-horizontal;
}

// Gradients

// Horizontal gradient, from left to right

// Creates two color stops, start and end, by specifying a color and position for each color stop.

@mixin gradient-horizontal(
	$start-color: #555,
	$end-color: #333,
	$start-percent: 0%,
	$end-percent: 100%
) {
	background-image: -o-linear-gradient(
		left,
		$start-color $start-percent,
		$end-color $end-percent
	); // Opera 12
	background-image: -webkit-linear-gradient(
		left,
		$start-color $start-percent,
		$end-color $end-percent
	); // Safari 5.1-6, Chrome 10+
	background-image: linear-gradient(
		to right,
		$start-color $start-percent,
		$end-color $end-percent
	); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
	background-repeat: repeat-x;
}

// Vertical gradient, from top to bottom

// Creates two color stops, start and end, by specifying a color and position for each color stop.

@mixin gradient-vertical(
	$start-color: #555,
	$end-color: #333,
	$start-percent: 0%,
	$end-percent: 100%
) {
	background-image: -o-linear-gradient(
		top,
		$start-color $start-percent,
		$end-color $end-percent
	); // Opera 12
	background-image: -webkit-linear-gradient(
		top,
		$start-color $start-percent,
		$end-color $end-percent
	); // Safari 5.1-6, Chrome 10+
	background-image: linear-gradient(
		to bottom,
		$start-color $start-percent,
		$end-color $end-percent
	); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
	background-repeat: repeat-x;
}

@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
	background-image: -o-linear-gradient(
		$deg,
		$start-color,
		$end-color
	); // Opera 12
	background-image: -webkit-linear-gradient(
		$deg,
		$start-color,
		$end-color
	); // Safari 5.1-6, Chrome 10+
	background-image: linear-gradient(
		$deg,
		$start-color,
		$end-color
	); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
	background-repeat: repeat-x;
}

@mixin gradient-horizontal-three-colors(
	$start-color: #00b3ee,
	$mid-color: #7a43b6,
	$color-stop: 50%,
	$end-color: #c3325f
) {
	background-image: -o-linear-gradient(
		left,
		$start-color,
		$mid-color $color-stop,
		$end-color
	);
	background-image: -webkit-linear-gradient(
		left,
		$start-color,
		$mid-color $color-stop,
		$end-color
	);
	background-image: linear-gradient(
		to right,
		$start-color,
		$mid-color $color-stop,
		$end-color
	);
	background-repeat: no-repeat;
}

@mixin gradient-vertical-three-colors(
	$start-color: #00b3ee,
	$mid-color: #7a43b6,
	$color-stop: 50%,
	$end-color: #c3325f
) {
	background-image: -o-linear-gradient(
		$start-color,
		$mid-color $color-stop,
		$end-color
	);
	background-image: -webkit-linear-gradient(
		$start-color,
		$mid-color $color-stop,
		$end-color
	);
	background-image: linear-gradient(
		$start-color,
		$mid-color $color-stop,
		$end-color
	);
	background-repeat: no-repeat;
}

@mixin gradient-radial($inner-color: #555, $outer-color: #333) {
	background-image: -webkit-radial-gradient(
		circle,
		$inner-color,
		$outer-color
	);
	background-image: radial-gradient(circle, $inner-color, $outer-color);
	background-repeat: no-repeat;
}

@mixin gradient-striped($color: rgba(255, 255, 255, 0.15), $angle: 45deg) {
	background-image: -o-linear-gradient(
		$angle,
		$color 25%,
		transparent 25%,
		transparent 50%,
		$color 50%,
		$color 75%,
		transparent 75%,
		transparent
	);
	background-image: -webkit-linear-gradient(
		$angle,
		$color 25%,
		transparent 25%,
		transparent 50%,
		$color 50%,
		$color 75%,
		transparent 75%,
		transparent
	);
	background-image: linear-gradient(
		$angle,
		$color 25%,
		transparent 25%,
		transparent 50%,
		$color 50%,
		$color 75%,
		transparent 75%,
		transparent
	);
}

// Labels

@mixin label-variant($color) {
	background-color: $color;

	&[href] {
		&:hover,
		&:focus {
			background-color: darken(
				if(
					function-exists(clay-get-fallback),
					clay-get-fallback($color),
					$color
				),
				10%
			);
		}
	}
}

// BS3 Navbar Vertical Align mixin

@mixin navbar-vertical-align($element-height) {
	margin-bottom: (($navbar-height - $element-height) / 2);
	margin-top: (($navbar-height - $element-height) / 2);
}

// Progress bars

@mixin progress-bar-variant($color) {
	background-color: $color;

	// Deprecated parent class requirement as of v3.2.0

	.progress-striped & {
		@include gradient-striped();
	}
}

// _responsive-visibility.scss

// More easily include all the states for responsive-utilities.less.
// [converter] $parent hack

@mixin responsive-visibility($parent) {
	#{$parent} {
		display: block !important;
	}

	table#{$parent} {
		display: table !important;
	}

	tr#{$parent} {
		display: table-row !important;
	}

	th#{$parent},
	td#{$parent} {
		display: table-cell !important;
	}
}

// [converter] $parent hack

@mixin responsive-invisibility($parent) {
	#{$parent} {
		display: none !important;
	}
}

// BS3 Tab Focus
// WebKit-style focus

@mixin tab-focus() {
	// Default

	outline: thin dotted;

	// WebKit

	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}

// BS3 Text Overflow mixin

@mixin text-overflow() {
	@include text-truncate();
}

// Vendor Prefixes

// All vendor mixins are deprecated as of v3.2.0 due to the introduction of
// Autoprefixer in our Gruntfile. They will be removed in v4.

// - Animations
// - Backface visibility
// - Box shadow
// - Box sizing
// - Content columns
// - Hyphens
// - Placeholder text
// - Transformations
// - Transitions
// - User Select

// Animations

@mixin animation($animation) {
	-o-animation: $animation;
	-webkit-animation: $animation;
	animation: $animation;
}

@mixin animation-name($name) {
	-webkit-animation-name: $name;
	animation-name: $name;
}

@mixin animation-duration($duration) {
	-webkit-animation-duration: $duration;
	animation-duration: $duration;
}

@mixin animation-timing-function($timing-function) {
	-webkit-animation-timing-function: $timing-function;
	animation-timing-function: $timing-function;
}

@mixin animation-delay($delay) {
	-webkit-animation-delay: $delay;
	animation-delay: $delay;
}

@mixin animation-iteration-count($iteration-count) {
	-webkit-animation-iteration-count: $iteration-count;
	animation-iteration-count: $iteration-count;
}

@mixin animation-direction($direction) {
	-webkit-animation-direction: $direction;
	animation-direction: $direction;
}

@mixin animation-fill-mode($fill-mode) {
	-webkit-animation-fill-mode: $fill-mode;
	animation-fill-mode: $fill-mode;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`

@mixin backface-visibility($visibility) {
	-moz-backface-visibility: $visibility;
	-webkit-backface-visibility: $visibility;
	backface-visibility: $visibility;
}

// Box sizing

@mixin box-sizing($boxmodel) {
	-moz-box-sizing: $boxmodel;
	-webkit-box-sizing: $boxmodel;
	box-sizing: $boxmodel;
}

// CSS3 Content Columns

@mixin content-columns($column-count, $column-gap: $grid-gutter-width) {
	-moz-column-count: $column-count;
	-moz-column-gap: $column-gap;
	-webkit-column-count: $column-count;
	-webkit-column-gap: $column-gap;
	column-count: $column-count;
	column-gap: $column-gap;
}

// Transformations

@mixin scale($ratio...) {
	transform: scale($ratio);
}

@mixin scaleX($ratio) {
	transform: scaleX($ratio);
}

@mixin scaleY($ratio) {
	transform: scaleY($ratio);
}

@mixin skew($x, $y) {
	transform: skewX($x) skewY($y);
}

@mixin translate($x, $y) {
	transform: translate($x, $y);
}

@mixin translate3d($x, $y, $z) {
	transform: translate3d($x, $y, $z);
}

@mixin rotate($degrees) {
	transform: rotate($degrees);
}

@mixin rotateX($degrees) {
	transform: rotateX($degrees);
}

@mixin rotateY($degrees) {
	transform: rotateY($degrees);
}

@mixin perspective($perspective) {
	perspective: $perspective;
}

@mixin perspective-origin($perspective) {
	perspective-origin: $perspective;
}

@mixin transform-origin($origin) {
	transform-origin: $origin;
}

// Transitions

@mixin transition-property($transition-property...) {
	transition-property: $transition-property;
}

@mixin transition-delay($transition-delay) {
	transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration...) {
	transition-duration: $transition-duration;
}

@mixin transition-timing-function($timing-function) {
	transition-timing-function: $timing-function;
}

@mixin transition-transform($transition...) {
	transition: transform $transition;
}

// User icons

@mixin color-user-icon($color: #999, $bg-color: #fff) {
	background-color: $bg-color;
	box-shadow: 0 0 0 1px $gray-300;
	color: $color;
}

@mixin monospace($size) {
	@include clay-monospace($size);
}

@mixin tab-focus() {
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}
