import core from 'metal';
import JSXComponent from 'metal-jsx';

export default class AppComponent extends JSXComponent {
	render() {
        return (
            <div>
				<div>
					<span class="tag"><%- labels.portletNamespace %>:</span> 
					<span class="value">{this.props.portletNamespace}</span>
				</div>

				<div>
					<span class="tag"><%- labels.contextPath %>:</span> 
					<span class="value">{this.props.contextPath}</span>
				</div>

				<div>
					<span class="tag"><%- labels.portletElementId %>:</span>
					<span class="value">{this.props.portletElementId}</span>
				</div>

				<% if (hasConfiguration) { %>
				<div>
					<span class="tag"><%- labels.configuration %>:</span>
					<span class="value pre">{JSON.stringify(this.props.configuration, null, 2)}</span>
				</div>
				<% } %>
			</div>
        );
    }
}

AppComponent.PROPS = {
	<% if (hasConfiguration) { %>
	configuration: {
		validator: core.isObject,
        value: '(unknown configuration)'
	},
	<% } %>
	portletNamespace: {
        validator: core.isString,
        value: '(unknown portletNamespace)'
    },
	contextPath: {
        validator: core.isString,
        value: '(unknown contextPath)'
    },
	portletElementId: {
		validator: core.isString,
        value: '(unknown portletElementId)'
	}
};