/**
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */

/* eslint-disable @liferay/no-dynamic-require */
/* eslint-disable @typescript-eslint/no-var-requires */

import {PkgJson, format} from '@liferay/js-toolkit-core';
import fs from 'fs';
import path from 'path';

import prompt from '../util/prompt';
import upgradeAdaptedProject from './upgradeAdaptedProject';
import upgradeRegularProject from './upgradeRegularProject';

const {fail, info, print, text, title} = format;

export default async function upgradeProject(): Promise<void> {
	const {version} = require('../../package.json');

	print('', title`|ðŸ‘‹ |Welcome to Liferay Project Upgrader v${version}`, '');

	if (!fs.existsSync('package.json')) {
		print(
			fail`
File package.json not found: {please run this command in a project's directory}
`
		);
		process.exit(1);
	}

	const pkgJson: PkgJson = require(path.resolve('package.json'));
	pkgJson.dependencies = pkgJson.dependencies || {};
	pkgJson.devDependencies = pkgJson.devDependencies || {};

	print(text`|âš™ |Analyzing project...`);

	print(info`Project name: {${pkgJson.name}}`);

	let upgrade: {
		(): Promise<void>;
		caveats?: string[];
		signatureDependencies: string[];
		steps: string[];
	};

	if (
		upgradeAdaptedProject.signatureDependencies.find(
			(dependency) => !!pkgJson.devDependencies[dependency]
		)
	) {
		print(info`Project type: {adapted project}`);

		upgrade = upgradeAdaptedProject;
	}
	else if (
		upgradeRegularProject.signatureDependencies.find(
			(dependency) => !!pkgJson.devDependencies[dependency]
		)
	) {
		print(info`Project type: {regular project}`);

		upgrade = upgradeRegularProject;
	}
	else {
		print(
			'',
			fail`
The project does not seem to be a Liferay JavaScript Toolkit project so there is
nothing to upgrade, sorry.
`,
			info`
If you believe this is an error, please file a bug in the following URL
explaining what the problem is:

    https://github.com/liferay/liferay-frontend-projects/issues/new

	`
		);
		process.exit(1);
	}

	print(
		text`

Now the upgrade process will offer you to make some changes to your project.

Before proceeding, we will show you the list of changes to be done and ask for
confirmation.

We recommend you to do a backup or commit your current project's state to your
version control system so that, if anything goes wrong, you may rollback the
upgrade.

Also, take into account that the upgrade process does its best effort, but you
may need to take some extra steps to finish the upgrade, depending on how much
you tweaked your project after it was generated by Liferay JavaScript Toolkit's
Yeoman generator.

Let's see the list of changes:
`,
		...upgrade.steps
	);

	const answer = await prompt(false, {}, [
		{
			default: false,
			message: 'Do you wish to proceed with the upgrade?',
			name: 'confirm',
			type: 'confirm',
		},
	]);

	if (!answer['confirm']) {
		print('', fail`Upgrade has been cancelled!`, '');
		process.exit(1);
	}

	print('');

	await upgrade();

	print(
		'',
		text`
The project has been upgraded to {@liferay/cli} platform. Please make sure
nothing was broken by comparing your backup or previous version control system
copy to the modified project.
	`,
		...(upgrade.caveats || []),
		title`Enjoy your upgraded project!| ðŸŽ‰|`,
		''
	);
}
